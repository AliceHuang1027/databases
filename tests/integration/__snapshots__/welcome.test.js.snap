// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test welcome page should render databases page correctly 1`] = `
"<!--views/partials/head.ejs-->
<meta charset='UTF-8'>
<!--CSS (load bootstrap from a CDN)-->
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/open-fonts@1.1.1/fonts/inter.min.css\\">
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\\">
<link rel=\\"icon\\" type=\\"image/gif\\" href=\\"/database.gif\\">
<style>
    input {
        text-align: center;
        width: 400px;
        height: 40px;
        margin: 5px;
    }
    button {
        width: 400px;
        height: 40px;
        margin: 10px;
    }
    .home {
        cursor: pointer;
    }
    .card {
        width: 450px;
        margin: auto;
    }
    .card > * {
        text-align: center;
    }
    .subtitle {
        margin: 10px;
    }
    .body {
        margin: 10px;
    }
</style>
<html lang=\\"en\\">
  <head>
    <title>learndatabases.dev</title>
  </head>
  <header>
    <h1 class=\\"home\\">Learn Databases</h1>
    
    
      <p><a href=\\"/signin\\">Login</a> / <a href=\\"/signup\\">Signup</a></p>
    
  </header>
</html>
<script>
  const home = document.querySelector('.home')
  home.addEventListener('click', () => {
    return location.href = '/'
  })

  
</script>

<style>
    .db-card {
      border: solid 1px rgb(0,0,0,0);
      margin-top: 15px;
      margin-bottom: 15px;
      padding: 10px;
      padding-bottom: 20px;
      border-radius: 5pX;
      cursor: pointer;
    }
    .db-card:hover {
      border: solid 1px rgb(10, 70, 120);
    }
</style>

<main>
    <div class=\\"card\\">
        <div class=\\"body\\">
            <blockquote class=\\"db-card postgres\\">
              <h3 class=\\"db-title\\">PostgreSQL</h3>
              <div class=\\"db-discription\\">A relational database management system emphasizing extensibility and technical standards compliance.</div>
            </blockquote>
            <blockquote class=\\"db-card mongodb\\">
              <h3 class=\\"db-title\\">MongoDB</h3>
              <div class=\\"db-discription\\">An open source database management system that uses a document-oriented database model which supports various forms of data.</div>
            </blockquote>
            <blockquote class=\\"db-card neo4j\\">
              <h3 class=\\"db-title\\">Neo4j</h3>
              <div class=\\"db-discription\\">A graph database management system that is the most papular graph database and the 22nd most popular database overall.</div>
            </blockquote>
        </div>
        <div class=\\"tale\\">
        </div>
    </div>
</main>

<script>
    const postgres = document.querySelector('.postgres')
    const mongodb = document.querySelector('.mongodb')
    const neo4j = document.querySelector('.neo4j')

    postgres.addEventListener('click', () => {
      location.href = '/postgres'
    })
    mongodb.addEventListener('click', () => {
      location.href = '/mongodb'
    })
    neo4j.addEventListener('click', () => {
      location.href = '/neo4j'
    })
</script>

"
`;

exports[`test welcome page should render postgres page correctly 1`] = `
"<!DOCTYPE html>
<!--views/partials/head.ejs-->
<meta charset='UTF-8'>
<!--CSS (load bootstrap from a CDN)-->
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/open-fonts@1.1.1/fonts/inter.min.css\\">
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\\">
<link rel=\\"icon\\" type=\\"image/gif\\" href=\\"/database.gif\\">
<style>
    input {
        text-align: center;
        width: 400px;
        height: 40px;
        margin: 5px;
    }
    button {
        width: 400px;
        height: 40px;
        margin: 10px;
    }
    .home {
        cursor: pointer;
    }
    .card {
        width: 450px;
        margin: auto;
    }
    .card > * {
        text-align: center;
    }
    .subtitle {
        margin: 10px;
    }
    .body {
        margin: 10px;
    }
</style>
<html lang=\\"en\\">
  <head>
    <title>learndatabases.dev</title>
  </head>
  <header>
    <h1 class=\\"home\\">Learn Databases</h1>
    
    
      <p><a href=\\"/signin\\">Login</a> / <a href=\\"/signup\\">Signup</a></p>
    
  </header>
</html>
<script>
  const home = document.querySelector('.home')
  home.addEventListener('click', () => {
    return location.href = '/'
  })

  
</script>

<html lang=\\"en\\">
  </head>
  <body>
    <h2>Learn and try out different databases!</h2>
    <p>Instructions on how to install and setup your own databases are included in the tutorial.</p>
    <p>If you don't want to install your own databases, you can use our databases and support us
    by creating an account for $10. (In Progess)</p>

      <blockquote>
      <p>MongoDB, a NoSQL Database. <a href=\\"#\\">MongoDB</a></p>
      </blockquote>

      <blockquote>
      <p>Postgres, an SQL Database. <a href=\\"#\\">PostGresSQL</a></p>
      </blockquote> 

      <blockquote>
      <p>Neo4j, a Graph Database. <a href=\\"#\\">Neo4j</a></p>
      </blockquote>

    <p style=\\"text-align:center;\\">Everything we do here is open source. Checkout our github
    <a href=\\"https://github.com/garageScript/databases\\">Here</a></p>
    <hr>
    <h3>Sponsors</h3>
    <ul>
      <li>
        <p><a href=\\"https://c0d3.com\\">C0d3</a> (They taught us to code)</p>
      </li>
    </ul>

    <p>Want to add a new Database or Sponsor? <a href=\\"#\\">Contact Us</a></p>

    <p>We collect anonymous analytics using Simple Analytics. View live: <a href=\\"#\\">simpleanalytics.com/learndatabases.dev</a></p>

  </body>
</html>
"
`;

exports[`test welcome page should render resetPassword page correctly 1`] = `
"<!--views/partials/head.ejs-->
<meta charset='UTF-8'>
<!--CSS (load bootstrap from a CDN)-->
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/open-fonts@1.1.1/fonts/inter.min.css\\">
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\\">
<link rel=\\"icon\\" type=\\"image/gif\\" href=\\"/database.gif\\">
<style>
    input {
        text-align: center;
        width: 400px;
        height: 40px;
        margin: 5px;
    }
    button {
        width: 400px;
        height: 40px;
        margin: 10px;
    }
    .home {
        cursor: pointer;
    }
    .card {
        width: 450px;
        margin: auto;
    }
    .card > * {
        text-align: center;
    }
    .subtitle {
        margin: 10px;
    }
    .body {
        margin: 10px;
    }
</style>
<html lang=\\"en\\">
  <head>
    <title>learndatabases.dev</title>
  </head>
  <header>
    <h1 class=\\"home\\">Learn Databases</h1>
    
    
      <p><a href=\\"/signin\\">Login</a> / <a href=\\"/signup\\">Signup</a></p>
    
  </header>
</html>
<script>
  const home = document.querySelector('.home')
  home.addEventListener('click', () => {
    return location.href = '/'
  })

  
</script>

<main>
    <div class=\\"card\\">
        <div class=\\"body\\">
            <h3 class=\\"subtitle\\">Reset your password</h3>
            <input class=\\"username\\" placeholder=\\"Username or Email\\" /><br>
            <button class=\\"submit\\">Submit</button>
        </div>
        <div class=\\"tale\\">
            <div>Wanna go back? <a href=\\"/signin\\">Log In</a></div>
        </div>
    </div>
</main>

<script>
  const submit = document.querySelector('.submit');
  const username = document.querySelector('.username');
  
  const getBody = (value) => {
    const body = {}
    if (value.includes(\\"@\\")) {
      body.email = value
      return body
    }
    body.username = value
    return body
  }

  submit.addEventListener('click', () => {
    fetch('/api/notifications', {
      method: \\"POST\\",
      headers: {
        'content-type': 'application/json'
      },
      body: JSON.stringify(getBody(username.value))
    }).then(r => r.json()).then((r) => {
      if (r.error) {
        alert(r.error.message)
      } else {
        alert(\`username: \${r.username}
email: \${r.email}

Check your email and set your password\`)
        return location.href = '/signin'
      }
    })
  })
</script>
"
`;

exports[`test welcome page should render setDBpassword page correctly 1`] = `
"<!--views/partials/head.ejs-->
<meta charset='UTF-8'>
<!--CSS (load bootstrap from a CDN)-->
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/open-fonts@1.1.1/fonts/inter.min.css\\">
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\\">
<link rel=\\"icon\\" type=\\"image/gif\\" href=\\"/database.gif\\">
<style>
    input {
        text-align: center;
        width: 400px;
        height: 40px;
        margin: 5px;
    }
    button {
        width: 400px;
        height: 40px;
        margin: 10px;
    }
    .home {
        cursor: pointer;
    }
    .card {
        width: 450px;
        margin: auto;
    }
    .card > * {
        text-align: center;
    }
    .subtitle {
        margin: 10px;
    }
    .body {
        margin: 10px;
    }
</style>
<html lang=\\"en\\">
  <head>
    <title>learndatabases.dev</title>
  </head>
  <header>
    <h1 class=\\"home\\">Learn Databases</h1>
    
    
      <p><a href=\\"/signin\\">Login</a> / <a href=\\"/signup\\">Signup</a></p>
    
  </header>
</html>
<script>
  const home = document.querySelector('.home')
  home.addEventListener('click', () => {
    return location.href = '/'
  })

  
</script>

<main>
    <div class=\\"card\\">
        <div class=\\"body\\">
            <h3 class=\\"subtitle\\">Set DB Password</h3>
            <input class=\\"dbPassword\\" placeholder=\\"password\\">
            <button class=\\"setButton\\">Set</button>
        </div>
    </div>
</main>
<script>
    const dbPassword = document.querySelector('.dbPassword')
    const setButton = document.querySelector('.setButton')

    setButton.addEventListener('click',()=>{
        fetch('/api/users/:id',{
            method:\\"PATCH\\",
            headers:{
                'Content-Type': 'application/json'
            },
            body:JSON.stringify({
                password:dbPassword.value
            })
        }).then(r=>r.json()).then(r=>{
            return location.href = '/databases'
        })
    })
</script>
"
`;

exports[`test welcome page should render setPassword page correctly 1`] = `
"<!--views/partials/head.ejs-->
<meta charset='UTF-8'>
<!--CSS (load bootstrap from a CDN)-->
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/open-fonts@1.1.1/fonts/inter.min.css\\">
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\\">
<link rel=\\"icon\\" type=\\"image/gif\\" href=\\"/database.gif\\">
<style>
    input {
        text-align: center;
        width: 400px;
        height: 40px;
        margin: 5px;
    }
    button {
        width: 400px;
        height: 40px;
        margin: 10px;
    }
    .home {
        cursor: pointer;
    }
    .card {
        width: 450px;
        margin: auto;
    }
    .card > * {
        text-align: center;
    }
    .subtitle {
        margin: 10px;
    }
    .body {
        margin: 10px;
    }
</style>
<html lang=\\"en\\">
  <head>
    <title>learndatabases.dev</title>
  </head>
  <header>
    <h1 class=\\"home\\">Learn Databases</h1>
    
    
      <p><a href=\\"/signin\\">Login</a> / <a href=\\"/signup\\">Signup</a></p>
    
  </header>
</html>
<script>
  const home = document.querySelector('.home')
  home.addEventListener('click', () => {
    return location.href = '/'
  })

  
</script>

<main>
    <div class=\\"card\\">
        <div class=\\"body\\">
            <h3 class=\\"subtitle\\">Set your password</h3>
            <input class=\\"password1\\" placeholder=\\"create new password\\" type=\\"password\\"/><br>
            <input class=\\"password2\\" placeholder=\\"confirm password\\" type=\\"password\\"/>
            <button class=\\"submit\\">Submit</button>
        </div>
    </div>
</main>

<script>
    const path = window.location.pathname.split('/')
    const token = path.pop()
    const password1 = document.querySelector('.password1')
    const password2 = document.querySelector('.password2')
    const submit = document.querySelector('.submit')

    submit.addEventListener('click', () => {
        if (password1.value !== password2.value) {
            return alert(\\"Passwords do not match. Please check again.\\")
        }
        fetch('/api/passwordReset', {
            method: \\"POST\\",
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                token: token,
                password: password1.value
            })
        }).then(r => r.json()).then((r) => {
            if (r.error) return alert(r.error.message)
            if (r.dbPassword) return location.href = '/'
            return location.href = '/setDBPassword'
        }).catch((err) => {
            alert(\\"Setting password has failed. Please try again.\\", err)
        })
    })
</script>

"
`;

exports[`test welcome page should render sign in page correctly 1`] = `
"<!--views/partials/head.ejs-->
<meta charset='UTF-8'>
<!--CSS (load bootstrap from a CDN)-->
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/open-fonts@1.1.1/fonts/inter.min.css\\">
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\\">
<link rel=\\"icon\\" type=\\"image/gif\\" href=\\"/database.gif\\">
<style>
    input {
        text-align: center;
        width: 400px;
        height: 40px;
        margin: 5px;
    }
    button {
        width: 400px;
        height: 40px;
        margin: 10px;
    }
    .home {
        cursor: pointer;
    }
    .card {
        width: 450px;
        margin: auto;
    }
    .card > * {
        text-align: center;
    }
    .subtitle {
        margin: 10px;
    }
    .body {
        margin: 10px;
    }
</style>
<html lang=\\"en\\">
  <head>
    <title>learndatabases.dev</title>
  </head>
  <header>
    <h1 class=\\"home\\">Learn Databases</h1>
    
    
      <p><a href=\\"/signin\\">Login</a> / <a href=\\"/signup\\">Signup</a></p>
    
  </header>
</html>
<script>
  const home = document.querySelector('.home')
  home.addEventListener('click', () => {
    return location.href = '/'
  })

  
</script>

<main>
    <div class=\\"card\\">
        <div class=\\"body\\">
            <h3 class=\\"subtitle\\">Please log in</h3>
            <input class=\\"username\\" placeholder=\\"Username\\" /><br>
            <input class=\\"password\\" placeholder=\\"Password\\" type=\\"password\\"/>
            <button class=\\"submit\\">Submit</button>
        </div>
        <div class=\\"tale\\">
            <div>Forgot password? <a href=\\"/resetPassword\\">Reset Password</a></div>
            <div>Don't have account? <a href=\\"/signup\\">Sign Up</a></div>
        </div>
    </div>
</main>

<script>
    const username = document.querySelector('.username')
    const password = document.querySelector('.password')
    const submit = document.querySelector('.submit')

    submit.addEventListener('click', () => {
        fetch('/api/session', {
            method: \\"POST\\",
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                username: username.value.toLowerCase(),
                password: password.value
            })
        }).then(r => r.json()).then((r) => {
            if (r.error) return alert(r.error.message)
            if (!r.dbPassword) return location.href = '/setDBPassword'
            return location.href = '/databases'
        })
    })
</script>

"
`;

exports[`test welcome page should render sign up page correctly 1`] = `
"<!--views/partials/head.ejs-->
<meta charset='UTF-8'>
<!--CSS (load bootstrap from a CDN)-->
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/open-fonts@1.1.1/fonts/inter.min.css\\">
<link rel=\\"stylesheet\\" href=\\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\\">
<link rel=\\"icon\\" type=\\"image/gif\\" href=\\"/database.gif\\">
<style>
    input {
        text-align: center;
        width: 400px;
        height: 40px;
        margin: 5px;
    }
    button {
        width: 400px;
        height: 40px;
        margin: 10px;
    }
    .home {
        cursor: pointer;
    }
    .card {
        width: 450px;
        margin: auto;
    }
    .card > * {
        text-align: center;
    }
    .subtitle {
        margin: 10px;
    }
    .body {
        margin: 10px;
    }
</style>
<html lang=\\"en\\">
  <head>
    <title>learndatabases.dev</title>
  </head>
  <header>
    <h1 class=\\"home\\">Learn Databases</h1>
    
    
      <p><a href=\\"/signin\\">Login</a> / <a href=\\"/signup\\">Signup</a></p>
    
  </header>
</html>
<script>
  const home = document.querySelector('.home')
  home.addEventListener('click', () => {
    return location.href = '/'
  })

  
</script>

<div class=\\"card\\">
  <div class=\\"body\\">
    <h3 class=\\"subtitle\\">Create Account</h3>
    <input
      class=\\"email\\"
      type=\\"email\\"
      placeholder=\\"Email Address\\"
      required
      />
    <input
      class=\\"username\\"
      type=\\"text\\"
      placeholder=\\"Username\\"
      required
      />
    <button class=\\"submit\\">Create Account</button>
  </div>
  <div class=\\"tale\\">
    Already have an account? <a href=\\"/signin\\">Login</a>
  </div>

<script>
  const submit = document.querySelector('.submit');
  const check = document.querySelector('.check');
  const username = document.querySelector('.username')
  const email = document.querySelector('.email')

  submit.addEventListener('click', () => {
    fetch('/api/users', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        username: username.value.toLowerCase(),
        email: email.value.toLowerCase()
      })
    }).then(r => r.json()).then((res) => {
      if (res.error) {
        const message = res.error.message
        alert(message)
      } else {
        alert(\\"Check your email and set your password\\")
        return location.href = '/signin'
      }
    })
  })
</script>
"
`;

exports[`test welcome page should render welcome page correctly 1`] = `
"<!DOCTYPE html>
<html lang=\\"en\\">
<head>
<meta charset=\\"utf-8\\">
<title>Error</title>
</head>
<body>
<pre>ReferenceError: /Users/alicefanz/Desktop/js/databases/views/welcome.ejs:2<br> &nbsp; &nbsp;1| &lt;!DOCTYPE html&gt;<br> &gt;&gt; 2| &lt;%- include(&#39;./partials/head&#39;) %&gt;<br> &nbsp; &nbsp;3| &lt;html lang=&quot;en&quot;&gt;<br> &nbsp; &nbsp;4| &nbsp; &lt;/head&gt;<br> &nbsp; &nbsp;5| &nbsp; &lt;body&gt;<br><br>/Users/alicefanz/Desktop/js/databases/views/partials/head.ejs:42<br> &nbsp; &nbsp;40| &nbsp; &lt;header&gt;<br> &nbsp; &nbsp;41| &nbsp; &nbsp; &lt;h1 class=&quot;home&quot;&gt;Learn Databases&lt;/h1&gt;<br> &gt;&gt; 42| &nbsp; &nbsp; &lt;% if (username) { %&gt;<br> &nbsp; &nbsp;43| &nbsp; &nbsp; &nbsp; &lt;p&gt;Welcome &lt;%= username %&gt;! &lt;a class=&quot;logout&quot; href=&quot;#&quot;&gt;Logout&lt;/a&gt;&lt;/p&gt;<br> &nbsp; &nbsp;44| &nbsp; &nbsp; &lt;% } %&gt;<br> &nbsp; &nbsp;45| &nbsp; &nbsp; &lt;% if (!username) { %&gt;<br><br>username is not defined<br> &nbsp; &nbsp;at eval (/Users/alicefanz/Desktop/js/databases/views/partials/head.ejs:12:8)<br> &nbsp; &nbsp;at head (/Users/alicefanz/Desktop/js/databases/node_modules/ejs/lib/ejs.js:691:17)<br> &nbsp; &nbsp;at include (/Users/alicefanz/Desktop/js/databases/node_modules/ejs/lib/ejs.js:689:39)<br> &nbsp; &nbsp;at eval (/Users/alicefanz/Desktop/js/databases/views/welcome.ejs:12:17)<br> &nbsp; &nbsp;at welcome (/Users/alicefanz/Desktop/js/databases/node_modules/ejs/lib/ejs.js:691:17)<br> &nbsp; &nbsp;at tryHandleCache (/Users/alicefanz/Desktop/js/databases/node_modules/ejs/lib/ejs.js:272:36)<br> &nbsp; &nbsp;at View.Object.&lt;anonymous&gt;.exports.renderFile [as engine] (/Users/alicefanz/Desktop/js/databases/node_modules/ejs/lib/ejs.js:489:10)<br> &nbsp; &nbsp;at View.render (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/view.js:135:8)<br> &nbsp; &nbsp;at tryRender (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/application.js:640:10)<br> &nbsp; &nbsp;at Function.render (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/application.js:592:3)<br> &nbsp; &nbsp;at ServerResponse.render (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/response.js:1012:7)<br> &nbsp; &nbsp;at app.get (/Users/alicefanz/Desktop/js/databases/src/server.js:45:20)<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at next (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/route.js:137:13)<br> &nbsp; &nbsp;at Route.dispatch (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/route.js:112:3)<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at /Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/index.js:281:22<br> &nbsp; &nbsp;at Function.process_params (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/index.js:335:12)<br> &nbsp; &nbsp;at next (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/index.js:275:10)<br> &nbsp; &nbsp;at jsonParser (/Users/alicefanz/Desktop/js/databases/node_modules/body-parser/lib/types/json.js:110:7)<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at trim_prefix (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/index.js:317:13)<br> &nbsp; &nbsp;at /Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/index.js:284:7<br> &nbsp; &nbsp;at Function.process_params (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/index.js:335:12)<br> &nbsp; &nbsp;at next (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/index.js:275:10)<br> &nbsp; &nbsp;at session (/Users/alicefanz/Desktop/js/databases/node_modules/express-session/index.js:475:7)<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at trim_prefix (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/index.js:317:13)<br> &nbsp; &nbsp;at /Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/index.js:284:7<br> &nbsp; &nbsp;at Function.process_params (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/index.js:335:12)<br> &nbsp; &nbsp;at next (/Users/alicefanz/Desktop/js/databases/node_modules/express/lib/router/index.js:275:10)<br> &nbsp; &nbsp;at SendStream.error (/Users/alicefanz/Desktop/js/databases/node_modules/serve-static/index.js:121:7)<br> &nbsp; &nbsp;at SendStream.emit (events.js:198:13)<br> &nbsp; &nbsp;at SendStream.error (/Users/alicefanz/Desktop/js/databases/node_modules/send/index.js:270:17)<br> &nbsp; &nbsp;at SendStream.onStatError (/Users/alicefanz/Desktop/js/databases/node_modules/send/index.js:421:12)<br> &nbsp; &nbsp;at next (/Users/alicefanz/Desktop/js/databases/node_modules/send/index.js:763:28)<br> &nbsp; &nbsp;at /Users/alicefanz/Desktop/js/databases/node_modules/send/index.js:771:23<br> &nbsp; &nbsp;at FSReqWrap.oncomplete (fs.js:153:21)</pre>
</body>
</html>
"
`;
